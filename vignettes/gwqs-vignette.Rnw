\documentclass[nojss]{jss}

%% -- LaTeX packages and custom commands ---------------------------------------

% \VignetteIndexEntry{gWQS}

%% recommended packages
\usepackage{thumbpdf,lmodern}

%% another package (only for this demo article)
\usepackage{framed}

%% other packages for math formulas
\usepackage{amsmath, bm}

%% package for figures
\usepackage{subfigure, graphicx, float}

%% new custom commands
\newcommand{\class}[1]{`\code{#1}'}
\newcommand{\fct}[1]{\code{#1()}}

%% create new operators: argmax and argmin
\DeclareMathOperator*{\argmax}{argmax}
\DeclareMathOperator*{\argmin}{argmin}

%% For Sweave-based articles about R packages:
%% need no \usepackage{Sweave}

%% -- Article metainformation (author, title, ...) -----------------------------

%% - \author{} with primary affiliation
%% - \Plainauthor{} without affiliations
%% - Separate authors by \And or \AND (in \author) or by comma (in \Plainauthor).
%% - \AND starts a new line, \And does not.
\author{Stefano Renzetti\\University of Brescia
   \And Chris Gennings\\Icahn School of Medicine at Mount Sinai
   \AND Paul C. Curtin\\Icahn School of Medicine at Mount Sinai}
\Plainauthor{Stefano Renzetti, Chris Gennings, Paul C. Curtin}

%% - \title{} in title case
%% - \Plaintitle{} without LaTeX markup (if any)
%% - \Shorttitle{} with LaTeX markup (if any), used as running title
\title{gWQS: An \proglang{R} Package for Linear and Generalized Weighted Quantile Sum (WQS) Regression}
\Plaintitle{gWQS: An R Package for Linear and Generalized Weighted Quantile Sum (WQS) Regression}
\Shorttitle{\proglang{gWQS}: WQS regression in \proglang{R}}

%% - \Abstract{} almost as usual
\Abstract{
% This vignette of the \proglang{R} package \pkg{gWQS} is a slightly modified version of \cite{Renzetti+Gennings+Curtin:2019}.

Weighted Quantile Sum (WQS) regression is a statistical model for multivariate regression in high-dimensional datasets commonly encountered in environmental exposures. The model constructs a weighted index estimating the mixture effect associated with all predictor variables on an outcome. The package \pkg{gWQS} extends WQS regression to applications with continuous, categorical and count outcomes. We provide two examples to illustrate the usage of the package.
}

%% - \Keywords{} with LaTeX markup, at least one required
%% - \Plainkeywords{} without LaTeX markup (if necessary)
%% - Should be comma-separated and in sentence case.
\Keywords{WQS, Weighted Quantile Sum, regression, mixture}
\Plainkeywords{WQS, Weighted Quantile Sum, regression, mixture}

%% - \Address{} of at least one author
%% - May contain multiple affiliations for each author
%%   (in extra lines, separated by \emph{and}\\).
%% - May contain multiple authors for the same affiliation
%%   (in the same first line, separated by comma).
\Address{
  Stefano Renzetti\\
  Department of Occupational Health\\
  University of Brescia\\
  Piazzale Spedali Civili, 1, 25123 Brescia BS Italy\\
  E-mail: \email{stefano.renzetti@unibs.it}\\
  \\
  Chris Gennings\\
  Department of Environmental Medicine and Public Health\\
  Faculty in Biostatistics\\
  Icahn School of Medicine at Mount Sinai\\
  1 Gustave L. Levy Place New York, NY 10029\\
  E-mail: \email{chris.gennings@mssm.edu}\\
  \\
  Paul C. Curtin\\
  Department of Environmental Medicine and Public Health\\
  Faculty in Biostatistics\\
  Icahn School of Medicine at Mount Sinai\\
  1 Gustave L. Levy Place New York, NY 10029\\
  E-mail: \email{paul.curtin@mssm.edu}
}


\begin{document}

<<include=FALSE, echo=FALSE>>=
library(knitr)
opts_chunk$set(
engine='R', tidy=FALSE, concordance=FALSE
)
@

<<preliminaries, echo=FALSE, results=hide>>=
options(prompt = "R> ", continue = "+  ", width = 70, useFancyQuotes = FALSE)
library(gWQS)
library(ggplot2)
library(broom)
library(gridExtra)
library(plotROC)
library(reshape2)
library(ggrepel)
library(VGAM)
@



%% -- Introduction -------------------------------------------------------------

\section[The gWQS package]{The gWQS package} \label{sec:gwqs}

The \proglang{R} package \pkg{gWQS} extends WQS regression to applications with continuous, categorical and count outcomes. In particular, this package uses the \fct{solnp} function from the \pkg{Rsolnp} package as optimization algorithm to estimates the weights. This function solves general nonlinear programming problems through the augmented Lagrangian multiplier method \citep{Ye:1987, Ghalanos+Theussl:2015}.\\
We list two examples to illustrate the usage of the package.\\


\subsection[Example 1]{Example 1} \label{sec:ex1}

The main function of the \pkg{gWQS} package is \fct{gwqs}, which allows the implementation of WQS regression for linear, logistic, multinomial, Poisson, quasi-Poisson and negative binomial regression. For Poisson and negative binomial regression a zero inflated option is also implemented. We created the \code{wqs_data} dataset (available once the package is installed and loaded) to demonstrate the use of this function. These data reflect 34 exposure concentrations simulated from a distribution of PCB exposures measured in subjects participating in the NHANES study (2001-2002). Additionally, an end-point measure, simulated from a distribution of leukocyte telomere length (LTL), a biomarker of chronic disease, is provided as well (variable name: \code{y}), along with simulated dichotomous (variable name: \code{y_bin}), multinomial (variable name: \code{y_multinom}) and count (variable name: \code{y_count}) outcome variables and covariates, e.g. \code{sex}. This dataset can thus be used to test the \pkg{gWQS} package by analyzing the mixture effect of the 34 simulated PCBs on the outcomes, with adjustments for covariates.\\
The following script calls a WQS model for a continuous outcome using the function \fct{gwqs}; we also show the script to reproduce the plots and tables that are automatically generated when setting the options \code{plots = TRUE, tables = TRUE}:
<<linear_reg, echo=TRUE, results=hide>>=
# we save the names of the mixture variables in the variable "toxic_chems"
toxic_chems <- names(wqs_data)[1:34]
# we run the model and save the results in the variable "results"
results <- gwqs(y ~ wqs, mix_name = toxic_chems,
               data = wqs_data, q = 4, validation = 0.6, b = 2,
               b1_pos = TRUE, b1_constr = FALSE, family = "gaussian",
               seed = 2016, plots = TRUE, tables = TRUE)
#
# bar plot
w_ord <- order(results$final_weights$mean_weight)
mean_weight <- results$final_weights$mean_weight[w_ord]
mix_name <- factor(results$final_weights$mix_name[w_ord],
                   levels = results$final_weights$mix_name[w_ord])
data_plot <- data.frame(mean_weight, mix_name)
ggplot(data_plot, aes(x = mix_name, y = mean_weight, fill = mix_name)) +
  geom_bar(stat = "identity", color = "black") + theme_bw() +
  theme(axis.ticks = element_blank(),
        axis.title = element_blank(),
        axis.text.x = element_text(color='black'),
        legend.position = "none") + coord_flip()
#
# scatter plot y vs wqs
ggplot(results$y_wqs_df, aes(wqs, y_adj)) + geom_point() +
  stat_smooth(method = "loess", se = FALSE, size = 1.5) + theme_bw()
#
# scatter plot residuals vs fitted values
fit_df <- broom::augment(results$fit)
ggplot(fit_df, aes(x = .fitted, y = .resid)) + geom_point() +
  theme_bw() + xlab("Fitted values") + ylab("Residuals")

@

\begin{figure}[H]
<<fig1, echo=FALSE, fig=TRUE>>=
bar_plot_h <- ggplot(data_plot, aes(x = mix_name, y = mean_weight, fill = mix_name)) +
  geom_bar(stat = "identity", color = "black") + theme_bw() +
  theme(axis.ticks = element_blank(),
        axis.title = element_blank(),
        axis.text.x = element_text(color='black'),
        legend.position = "none") + coord_flip() + ggtitle("A")


yadj_vs_wqs <- ggplot(results$y_wqs_df, aes(wqs, y_adj)) + geom_point() +
  stat_smooth(method = "loess", se = FALSE, size = 1.5) + theme_bw() + ggtitle("B")


res_vs_fitted <- ggplot(fit_df, aes(x = .fitted, y = .resid)) + geom_point() +
  theme_bw() + xlab("Fitted values") + ylab("Residuals") + ggtitle("C")


grid.arrange(bar_plot_h, yadj_vs_wqs, res_vs_fitted, ncol=2)
@
\caption{Plots displayed for linear outcomes when \code{plots = TRUE}} \label{fig:model1}
\end{figure}

This WQS model tests the relationship between our dependent variable, \code{y}, and a WQS index estimated from ranking exposure concentrations in quartiles (\code{q = 4}); the \code{wqs} term must be included in the \code{formula}). It also divided the data for training and validation, with 40\% of the dataset for training and 60\% for validation (\code{validation = 0.6}), and assigned 2 bootstrap samples (\code{b = 2}) for parameter estimation (in practical applications we suggest at least 100 bootstrap samples to be used). Because WQS provides a unidirectional evaluation of mixture effects, we first examined weights derived from bootstrap models where $\beta_1$ was positive (\code{b1_pos = TRUE}); we could test for negative associations by setting that parameter to be false (\code{b1_pos = FALSE}). We can also choose to constrain the $\beta_1$ to be positive (\code{b1_pos = TRUE} and \code{b1_constr = TRUE}) or negative (\code{b1_pos = FALSE} and \code{b1_constr = TRUE}) when we estimate the weights; in the case of example 1 we are not applying a constraint to $\beta_1$. We linked our model to a gaussian distribution to test for relationships between the continuous outcome and exposures (\code{family = "gaussian"}), and fixed the seed to 2016 for reproducible results (\code{seed = 2016}). We plotted a summary model with loess fit, and a summary of each variables' relative weight, and the residuals vs fitted values plot (\code{plots = TRUE}). The command \code{tables = TRUE} automatically generates in the Viewer pane the tables of the weight ranked list and the model summary.\\
Figure~\ref{fig:model1} A is a barplot showing the weights assigned to each variable ordered from the highest weight to the lowest. These results indicate that the variables \code{log_LBXF06LA} and \code{log_LBXD02LA} are the largest contributors to this mixture effect, with the first 6 chemicals explaining more than the 70\% of the total weights.\\
In plot B of figure~\ref{fig:model1} we have a representation of the wqs index vs the outcome (adjusted for the model residual when covariates are included in the model) that shows the direction and the shape of the association between the exposure and the outcome. For example, in this case we can observe a linear and positive relationship between the mixture and the \code{y} variable.\\
In plot C a diagnostic graph of the residuals vs the fitted values is shown to check if they are randomly spread around zero or if there is a trend.\\
To test the statistical significance of the association between the variables in the model, the following code has to be run:
<<linear_reg_sum, echo=TRUE>>=
summary(results$fit)
@
This result tells us that the association is positive and statistically significant (\code{p=0.025}).\\
To have the exact values of the estimated weights we can apply the command \code{results$final_weights}. The following code shows the first six highest weights; the full list of weights can be called by omitting the head function:
<<linear_reg_weights, echo=TRUE>>=
head(results$final_weights)
@
These tables are also shown in the Viewer window when we set \code{tables = TRUE}.\\
The \fct{gwqs} function gives back other outputs like the vector of the values that indicate whether the solver has converged (0) or not (1 or 2) (\code{results$conv}), the matrix with all the estimated weights and the associated $\beta_1$, standard errors, statistics and p-values for each bootstrap sample (\code{results$bres}), the vector of the estimated \code{wqs} index (\code{results$wqs}), the vector containing the cutoffs used to determine the quantiles (\code{results$q_i}), the list of vectors containing the rows of the subjects included in each bootstrap dataset (\code{results$bindex}), the rows identifying the subjects used to estimate the weights in each bootstrap (\code{results$tindex}) and the rows identifying the subjects used to estimate the parameters of the final model (\code{results$vindex}).\\


\subsection[Example 2]{Example 2} \label{sec:ex2}

In the following code we run a logistic regression (\code{family = binomial}) to test the association between the exposure to the mixture and the outcome \code{y_bin} and we also add the covariate \code{sex}. Since the mixture concentrations in this example are already standardized we can also run a model without categorizing for quantiles (\code{q = NULL}) after checking that there were no skewed distributions. Furthermore we examined the ability of our model to predict the outcome on a third part of the dataset (\code{pred = 0.3}). As we see from the script below \code{validation = 0.4}; that means that the 30\% of the data are used as test dataset, 40\% for validation and the last 30\% for prediction; the script to generate the additional plot is reported:
<<logistic_reg, echo=TRUE, results=hide>>=
# we run the logistic model and save the results in the variable
# "results2"
results2 <- gwqs(y_bin ~ wqs + sex, mix_name = toxic_chems,
                data = wqs_data, q = NULL, validation = 0.4, b = 2,
                b1_pos = TRUE, b1_constr = FALSE, family = binomial,
                seed = 2018, plots = TRUE, tables = FALSE, pred = 0.3)
#
# plot ROC curve
gg_roc <- ggplot(results2$df_pred, aes(d=y, m=p_y)) + geom_roc(n.cuts = 0) +
  style_roc(xlab = "1 - Specificity", ylab = "Sensitivity")
auc_est <- plotROC::calc_auc(gg_roc)
gg_roc + annotate("text", x=0.75, y=0.25,
                  label=paste0("AUC = ", round(auc_est[, "AUC"], 3)))

@

\begin{figure}[H]
<<fig2, echo=FALSE, fig=TRUE>>=
w_ord <- order(results2$final_weights$mean_weight)
mean_weight <- results2$final_weights$mean_weight[w_ord]
mix_name <- factor(results2$final_weights$mix_name[w_ord], levels = results2$final_weights$mix_name[w_ord])
data_plot <- data.frame(mean_weight, mix_name)
bar_plot_h <- ggplot(results2$final_weights, aes(x = mix_name, y = mean_weight, fill = mix_name))
bar_plot_h <- ggplot(data_plot, aes(x = mix_name, y = mean_weight, fill = mix_name)) +
  geom_bar(stat = "identity", color = "black") + theme_bw() +
  theme(axis.ticks = element_blank(),
        axis.title = element_blank(),
        axis.text.x = element_text(color='black'),
        legend.position = "none") + coord_flip() + ggtitle("A")


yadj_vs_wqs <- ggplot(results2$y_wqs_df, aes(wqs, y)) + geom_point() +
  stat_smooth(method = "loess", se = FALSE, size = 1.5) + theme_bw() + ggtitle("B")


gg_roc <- gg_roc + annotate("text", x=0.75, y=0.25, label=paste0("AUC = ", round(auc_est[, "AUC"], 3))) +
  ggtitle("C")


grid.arrange(bar_plot_h, yadj_vs_wqs, gg_roc, ncol=2)
@
\caption{Plots displayed for binary outcomes when \code{plots = TRUE} and \code{pred > 0}} \label{fig:model2}
\end{figure}

From figure~\ref{fig:model2} we see the per-variable calculated weights, ordered by relative magnitude. Plot B shows a positive relationship between the mixture and the outcome and as we can see from the following code it is statistically significant (p<0.001):
<<logistic_reg_sum, echo=TRUE>>=
summary(results2$fit)
@
In plot C we show the Receiver Operating Characteristic (ROC) curve related to the predictive model: we can see that the cutoff that is closer to the left-hand border and the top border has around 70\% sensitivity (true positive) and 30\% specificity (false positive).\\
In this case two more parameters are returned by the \fct{gwqs} function: \code{df_pred}, which is a \code{data.frame} including a first column the actual value of the dependent variable and as a second column the predicted values; and \code{pindex}, the dataset rows identifying the observations used for prediction.\\
The \code{gwqs} function implements the \code{predict} function to run the predictive model. The following code shows how to reproduce the prediction:
<<logistic_reg_pred, echo=TRUE, results=hide, warnings=FALSE>>=
# create a dataset exluding the data where we want to apply the prediction
# and define the group variable to identify the test and validation dataset
wqs_data$group <- 0
wqs_data$group[results2$vindex] <- 1
wqs_data_train <- wqs_data[-results2$pindex,]
# fit the model on the training dataset
results2_pred <- gwqs(y_bin ~ wqs + sex, mix_name = toxic_chems,
                data = wqs_data_train, q = NULL, validation = NULL,
                b = 2, valid_var = "group", b1_pos = TRUE,
                b1_constr = FALSE, family = binomial, seed = 2018)
# creat the dataset on which we apply the prediction
wqs_data_pred <- wqs_data[results2$pindex,]
# create wqs variable for the prediction dataset
mix_matrx <- as.matrix(wqs_data_pred[, rownames(results2$final_weights)])
wqs_data_pred$wqs <- as.numeric(mix_matrx%*%results2$final_weights$mean_weight)
# apply the predict() function
pred <- predict(results2$fit, newdata = wqs_data_pred, type = "response")
df_pred <- data.frame(y = wqs_data_pred$y_bin, p_y = pred)
# plot the roc curve
gg_roc <- ggplot(df_pred, aes(d=y, m=p_y)) + geom_roc(n.cuts = 0) +
  style_roc(xlab = "1 - Specificity", ylab = "Sensitivity")
auc_est <- plotROC::calc_auc(gg_roc)
gg_roc + annotate("text", x=0.75, y=0.25,
                  label=paste0("AUC = ", round(auc_est[, "AUC"], 3)))
@



%% -- Summary/conclusions/discussion -------------------------------------------
\section[Discussion]{Discussion} \label{sec:discussion}

WQS regression is a new method that allows the investigation of the associations between mixtures of predictors and continuous, count, or categorical data. This approach is particularly robust against outliers and extreme values because of the ranking procedure used, and is additionally robust against collinearity through the constraints imposed during weight estimation and application of an ensemble estimation procedure. As well, the capacity for covariate adjustment and the simplicity of model interpretation are among the greatest strengths of this approach, and underlie its applicability to health-related research. Through the weighted index we are able to identify the combined impact of multiple predictors on a given outcome, while in the estimation of the weights we may simultaneously assess the discrete effects of contributing variables, with coadjustment for the overall mixture and relevant covariates.\\
The package \pkg{gWQS} provides a robust, generalizable implementation of this methodology in \proglang{R} extending the application of the model to continuous, binary, multinomial and count data applying the corresponding log-likelihood for each type of regression (zero inflated likelihoods are also available). The new version of the package allows also to run a stratified analysis for a categorial variable.\\
Future versions of the package will provide the ability to fit additional generalised linear models.




%% -- Optional special unnumbered sections -------------------------------------

\section*{Acknowledgments}

This package was developed at the CHEAR Data Center (Dept. of Environmental Medicine and Public Health, Icahn School of Medicine at Mount Sinai) with funding and support from NIEHS (U2C ES026555-01) with additional support from the Empire State Development Corporation.


%% -- Bibliography -------------------------------------------------------------
%% - References need to be provided in a .bib BibTeX database.
%% - All references should be made with \cite, \citet, \citep, \citealp etc.
%%   (and never hard-coded). See the FAQ for details.
%% - JSS-specific markup (\proglang, \pkg, \code) should be used in the .bib.
%% - Titles in the .bib should be in title case.
%% - DOIs should be included where available.
\newpage

\bibliography{refs_wqs}


%% -----------------------------------------------------------------------------


\end{document}
